name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      debug_coverage:
        description: 'Enable detailed coverage debugging'
        required: false
        default: true
        type: boolean

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,test]"

    - name: Lint with ruff
      run: |
        ruff check . || true

    - name: Format check with black
      run: |
        black --check . || true

    - name: Type check with mypy
      run: |
        mypy . --ignore-missing-imports || true

    - name: Security check with bandit
      run: |
        bandit -r . -f json -o bandit-report.json || true

    - name: Run tests with coverage
      continue-on-error: true
      run: |
        pytest --cov=claude_builder --cov-report=xml:coverage.xml --cov-report=html:htmlcov --cov-report=term-missing --junitxml=junit.xml -v

    - name: Ensure coverage.xml exists
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      run: |
        if [ ! -f coverage.xml ]; then
          echo "coverage.xml missing, attempting to generate from .coverage"
          coverage xml -o coverage.xml || true
        fi
        ls -la coverage.xml || echo "coverage.xml not found after generation attempt"

    - name: Debug coverage file
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      run: |
        ls -la coverage.xml || echo "coverage.xml not found"
        cat coverage.xml | head -20 || echo "Cannot read coverage.xml"

    - name: Display coverage summary
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      run: |
        echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
        coverage report >> $GITHUB_STEP_SUMMARY || echo "Coverage report not available" >> $GITHUB_STEP_SUMMARY

    - name: Upload test results and coverage artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          junit.xml
          coverage.xml
          htmlcov/
          bandit-report.json

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,test]"

    - name: Lint markdown files
      uses: DavidAnson/markdownlint-cli2-action@v16
      with:
        globs: |
          **/*.md
          !.venv/**
          !node_modules/**

  secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install detect-secrets
        run: |
          python -m pip install --upgrade pip
          pip install detect-secrets
      - name: Verify secrets baseline
        run: detect-secrets scan --baseline .secrets.baseline --all-files --exclude-files 'src/claude_builder/templates/*'
