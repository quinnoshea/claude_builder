name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Ruff
        run: ruff check --output-format=github .
      - name: Black (check)
        run: black --check .
      - name: Isort (check)
        run: isort --check-only .

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: MyPy
        run: mypy --config-file=pyproject.toml src

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install detect-secrets
        run: |
          python -m pip install --upgrade pip
          pip install detect-secrets
      - name: Verify secrets baseline
        run: detect-secrets scan --baseline .secrets.baseline --all-files --exclude-files 'src/claude_builder/templates/*'

  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install project (dev)
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Run tests
        env:
          PYTHONPATH: src
        run: |
          pytest -q --maxfail=1
      - name: Coverage XML
        if: always()
        run: |
          coverage xml -o coverage.xml || true
      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}.xml
          path: coverage.xml
