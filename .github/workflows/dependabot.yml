# GitHub Actions workflow for Dependabot PRs
# This workflow runs additional checks on Dependabot pull requests
# and can auto-merge safe dependency updates

name: Dependabot

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Run tests
        run: |
          uv run pytest --maxfail=1 --disable-warnings -q --cov=claude_builder --cov-report=xml:coverage.xml

      - name: Run security checks
        run: |
          uv run bandit -r src/ -f json -o bandit-report.json || true
          uv run safety check --json --output safety-report.json || true

      - name: Run linting
        run: |
          uv run ruff check src/ tests/
          uv run mypy src/

      - name: Check if auto-merge is safe
        id: auto-merge-check
        run: |
          echo "Auto-merge conditions:"
          echo "- Update type: ${{ steps.metadata.outputs.update-type }}"
          echo "- Package ecosystem: ${{ steps.metadata.outputs.package-ecosystem }}"
          echo "- Dependency type: ${{ steps.metadata.outputs.dependency-type }}"

          # Safe auto-merge conditions
          if [[ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-patch" ]] || \
             [[ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-minor" && "${{ steps.metadata.outputs.dependency-type }}" == "development" ]] || \
             [[ "${{ steps.metadata.outputs.package-ecosystem }}" == "github-actions" && "${{ steps.metadata.outputs.update-type }}" != "version-update:semver-major" ]]; then
            echo "auto-merge=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Auto-merge conditions met"
          else
            echo "auto-merge=false" >> $GITHUB_OUTPUT
            echo "‚ùå Auto-merge conditions not met - manual review required"
          fi

      - name: Enable auto-merge for safe updates
        if: steps.auto-merge-check.outputs.auto-merge == 'true'
        run: |
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add labels based on update type
        uses: actions/github-script@v8
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const labels = ['dependabot'];

            // Add ecosystem-specific labels
            if ('${{ steps.metadata.outputs.package-ecosystem }}' === 'pip') {
              labels.push('python');
            } else if ('${{ steps.metadata.outputs.package-ecosystem }}' === 'github-actions') {
              labels.push('ci');
            }

            // Add update type labels
            if ('${{ steps.metadata.outputs.update-type }}'.includes('major')) {
              labels.push('major-update', 'needs-review');
            } else if ('${{ steps.metadata.outputs.update-type }}'.includes('minor')) {
              labels.push('minor-update');
            } else if ('${{ steps.metadata.outputs.update-type }}'.includes('patch')) {
              labels.push('patch-update');
            }

            // Add dependency type labels
            if ('${{ steps.metadata.outputs.dependency-type }}' === 'development') {
              labels.push('dev-deps');
            } else {
              labels.push('runtime-deps');
            }

            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: labels
            });

      - name: Comment on major updates
        if: contains(steps.metadata.outputs.update-type, 'major')
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üö® **Major Version Update Detected**

              This PR updates \`${{ steps.metadata.outputs.dependency-name }}\` from \`${{ steps.metadata.outputs.old-version }}\` to \`${{ steps.metadata.outputs.new-version }}\`.

              **‚ö†Ô∏è Manual review recommended:**
              - Check for breaking changes in the release notes
              - Verify compatibility with your codebase
              - Test thoroughly before merging

              **Useful links:**
              - [Release notes](${{ steps.metadata.outputs.release-notes }})
              - [Changelog](${{ steps.metadata.outputs.changelog }})
              - [Commit history](${{ steps.metadata.outputs.commits }})
              `
            });
